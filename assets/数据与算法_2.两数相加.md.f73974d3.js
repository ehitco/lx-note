import{_ as s,o as n,c as a,a as l}from"./app.aec7eb12.js";const i=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u60F3\u6CD5","slug":"\u60F3\u6CD5","link":"#\u60F3\u6CD5","children":[]},{"level":2,"title":"\u521D\u6B65\u81EA\u5DF1\u89E3\u9898","slug":"\u521D\u6B65\u81EA\u5DF1\u89E3\u9898","link":"#\u521D\u6B65\u81EA\u5DF1\u89E3\u9898","children":[]},{"level":2,"title":"\u522B\u4EBA\u7684\u9898\u89E3","slug":"\u522B\u4EBA\u7684\u9898\u89E3","link":"#\u522B\u4EBA\u7684\u9898\u89E3","children":[]}],"relativePath":"\u6570\u636E\u4E0E\u7B97\u6CD5/2.\u4E24\u6570\u76F8\u52A0.md","lastUpdated":1670483514000}'),p={name:"\u6570\u636E\u4E0E\u7B97\u6CD5/2.\u4E24\u6570\u76F8\u52A0.md"},o=l(`<h2 id="\u60F3\u6CD5" tabindex="-1">\u60F3\u6CD5 <a class="header-anchor" href="#\u60F3\u6CD5" aria-hidden="true">#</a></h2><p><img src="https://cdn.jsdelivr.net/gh/Loveyless/img-clouding/img/20220923011155.png" alt=""></p><p>\u521D\u6B65\u89C9\u5F97\u9700\u8981\u64CD\u4F5C\u4E00\u4E0B\u6570\u7EC4 \u8F6C\u6570\u5B57 \u5728\u52A0\u4E00\u4E0B\u8F6C\u56DE\u53BB</p><p>\u9898\u76EE\u90FD\u4E0D\u592A\u61C2</p><p><strong>\u56E0\u4E3A\u5B66\u524D\u7AEF\u6CA1\u89E3\u9664\u8FC7\u94FE\u8868 \u6570\u636E\u7ED3\u6784\u5149\u5B66\u4E8C\u53C9\u6811\u4E86(\u867D\u7136\u6211\u8FD8\u6CA1\u597D\u597D\u542C)\u4F46\u662F\u5E78\u8FD0\u7684\u662F\u6B63\u597D\u4E70\u4E86\u672C\u7B97\u6CD5\u5C0F\u518C \u61C2\u4E86\u94FE\u8868 \u56DE\u5934\u518D\u6765\u5237\u8FD9\u9053\u9898</strong><img src="https://cdn.jsdelivr.net/gh/Loveyless/img-clouding/img/20220923011617.png" alt=""> \u770B\u4E86\u4E00\u4E0B\u89E3\u6790 \u660E\u767D\u4E86</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ListNode</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Val  </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#A6ACCD;">	Next </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">addTwoNumbers</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l1 </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> l2 </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;">//\u8FD9\u6837\u5C31\u53EB\u94FE\u8868</span></span>
<span class="line"><span style="color:#A6ACCD;">	l1 </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> ListNode</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil}}}}</span></span>
<span class="line"><span style="color:#A6ACCD;">	l2 </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> ListNode</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil}}}}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">addTwoNumbers</span><span style="color:#89DDFF;">(&amp;</span><span style="color:#A6ACCD;">l1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">l2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="\u521D\u6B65\u81EA\u5DF1\u89E3\u9898" tabindex="-1">\u521D\u6B65\u81EA\u5DF1\u89E3\u9898 <a class="header-anchor" href="#\u521D\u6B65\u81EA\u5DF1\u89E3\u9898" aria-hidden="true">#</a></h2><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ListNode</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Val  </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#A6ACCD;">	Next </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">addTwoNumbers</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l1 </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> l2 </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> cur1 </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> l1</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> cur2 </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> l2</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> slice1 </span><span style="color:#89DDFF;">[]</span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> slice2 </span><span style="color:#89DDFF;">[]</span><span style="color:#C792EA;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;">// \u94FE\u8868\u8F6C\u6570\u7EC4</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> cur1 </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		slice1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">slice1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> strconv</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Itoa</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cur1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Val</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">		cur1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cur1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Next</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> cur2 </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		slice2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">slice2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> strconv</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Itoa</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">cur2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Val</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">		cur2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cur2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Next</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;">// \u53CD\u8F6C</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">slice1</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		temp </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> slice1</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">		slice1</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> slice1</span><span style="color:#89DDFF;">[</span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">slice1</span><span style="color:#89DDFF;">)-</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">		slice1</span><span style="color:#89DDFF;">[</span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">slice1</span><span style="color:#89DDFF;">)-</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> temp</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">slice2</span><span style="color:#89DDFF;">)/</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		temp </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> slice2</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">		slice2</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> slice2</span><span style="color:#89DDFF;">[</span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">slice2</span><span style="color:#89DDFF;">)-</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">		slice2</span><span style="color:#89DDFF;">[</span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">slice2</span><span style="color:#89DDFF;">)-</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> temp</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;">// \u6570\u7EC4\u8F6C\u5B57\u7B26\u4E32</span></span>
<span class="line"><span style="color:#A6ACCD;">	str1 </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> strings</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Join</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">slice1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	str2 </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> strings</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Join</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">slice2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;">// \u76F8\u52A0\u8BA1\u7B97</span></span>
<span class="line"><span style="color:#A6ACCD;">	num1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _ </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> strconv</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Atoi</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">str1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	num2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _ </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> strconv</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Atoi</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">str2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	num </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> num1 </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> num2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;">// \u5207\u5272</span></span>
<span class="line"><span style="color:#A6ACCD;">	numArr </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> strings</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Split</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">strconv</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Itoa</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">num</span><span style="color:#89DDFF;">),</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;">// \u53CD\u8F6C\u6570\u7EC4</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> reversalArr </span><span style="color:#89DDFF;">[]</span><span style="color:#C792EA;">string</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">numArr</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		reversalArr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">reversalArr</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> numArr</span><span style="color:#89DDFF;">[</span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">numArr</span><span style="color:#89DDFF;">)-</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">])</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;">// \u53CD\u8F6C\u521B\u5EFA\u94FE\u8868</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> returnListNode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> cur </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> returnListNode</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">len</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">reversalArr</span><span style="color:#89DDFF;">);</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;">// n, _ := strconv.Atoi(numArr[len(numArr)-i])</span></span>
<span class="line"><span style="color:#A6ACCD;">		n</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> _ </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> strconv</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Atoi</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">reversalArr</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;">// returnListNode.Val = n  //\u8FD9\u6837\u521B\u5EFA\u5C31\u4F1A\u62A5\u9519 \u81EA\u5DF1\u5199\u7684\u4E0D\u5BF9 panic: runtime error: invalid memory address or nil pointer dereference</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;">// returnListNode = returnListNode.Next</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">		returnListNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Next </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Val</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> n</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">		returnListNode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> returnListNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Next</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Next</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><img src="https://cdn.jsdelivr.net/gh/Loveyless/img-clouding/img/20221029003838.png" alt=""></p><p>\u81EA\u5DF1\u7528\u7684\u5F88\u7B28\u7684\u65B9\u6CD5 \u4E0D\u8FC7\u662F\u6211\u7B2C\u4E00\u65F6\u95F4\u60F3\u51FA\u6765\u7684 \u8FD8\u662F\u6CA1\u6709\u94FE\u8868\u601D\u60F3</p><p>\u5931\u8D25\u7684\u539F\u56E0\u53EF\u80FD\u662F\u6570\u5B57\u8D85\u8FC7 go int \u7C7B\u578B\u7684\u6700\u5927\u503C\u4E86 (\u6211\u6362\u4E86 uint64 \u4F46\u662F func strconv.Atoi(s <em>string</em>) (<em>int</em>, <em>error</em>)\u8FD9\u4E2A\u51FD\u6570\u8FD4\u56DE\u503C\u662F int \u7C7B\u578B \u6240\u4EE5\u4E0D\u4E86\u4E86\u4E4B\u4E86)</p><h2 id="\u522B\u4EBA\u7684\u9898\u89E3" tabindex="-1">\u522B\u4EBA\u7684\u9898\u89E3 <a class="header-anchor" href="#\u522B\u4EBA\u7684\u9898\u89E3" aria-hidden="true">#</a></h2><p>\u601D\u8DEF\uFF1A</p><p>\u4E0D\u65AD\u904D\u5386\u4E24\u4E2A\u94FE\u8868\uFF0C\u7136\u540E\u8BB2\u4E24\u4E2A\u8282\u70B9\u7684\u6570\u503C\u76F8\u52A0\u3002</p><p>\u6CE8\u610F\uFF1A\u76F8\u52A0\u7684\u603B\u548C\uFF08\u4E0B\u9762\u4EE3\u7801\u4E2D\u7684 totalValue\uFF09\u53EF\u80FD\u4F1A\u4EA7\u751F\u8D85\u51FA 10 \u7684\u8303\u56F4\uFF0C\u8D85\u51FA 10 \u7684\u8303\u56F4\u9700\u8981\u5C06\u8D85\u51FA\u7684\u6570\u503C\uFF08\u4E0B\u9762\u4EE3\u7801\u4E2D\u7684 preValue\uFF09\u4FDD\u7559\u5230\u4E0B\u4E00\u4E2A\u8282\u70B9\u4F7F\u7528\u3002</p><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(max(m,n))\uFF0C\u5176\u4E2D m \u548C n \u5206\u522B\u4E3A\u4E24\u4E2A\u94FE\u8868\u7684\u957F\u5EA6\u3002\u6211\u4EEC\u8981\u904D\u5386\u4E24\u4E2A\u94FE\u8868\u7684\u5168\u90E8\u4F4D\u7F6E\uFF0C\u800C\u5904\u7406\u6BCF\u4E2A\u4F4D\u7F6E\u53EA\u9700\u8981 O(1)\u7684\u65F6\u95F4\u3002</p><p>\u7A7A\u95F4\u590D\u6742\u5EA6\uFF1AO(1)\u3002\u6CE8\u610F\u8FD4\u56DE\u503C\u4E0D\u8BA1\u5165\u7A7A\u95F4\u590D\u6742\u5EA6\u3002</p><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">ListNode</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">struct</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	Val  </span><span style="color:#C792EA;">int</span></span>
<span class="line"><span style="color:#A6ACCD;">	Next </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">addTwoNumbers</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l1 </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> l2 </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	resultNode </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	tempNode </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> resultNode</span></span>
<span class="line"><span style="color:#A6ACCD;">	preValue </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;">// \u4E24\u4E2A\u94FE\u8868\u4E0D\u4E3A\u7A7A, \u4E00\u76F4\u904D\u5386</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> l1 </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> l2 </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		val1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> val2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> currentValue </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> l1 </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			val1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> l1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Val</span></span>
<span class="line"><span style="color:#A6ACCD;">			l1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> l1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Next</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> l2 </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			val2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> l2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Val</span></span>
<span class="line"><span style="color:#A6ACCD;">			l2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> l2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Next</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;">// \u53D6\u5F97\u5F53\u524D\u603B\u548C</span></span>
<span class="line"><span style="color:#A6ACCD;">		totalValue </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> val1 </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> val2 </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> preValue</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#676E95;">// \u5F53\u524D&quot;\u4E2A\u4F4D&quot;\u4E0E&quot;\u8FDB\u4F4D&quot;\u503C</span></span>
<span class="line"><span style="color:#A6ACCD;">		currentValue</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> preValue </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> totalValue</span><span style="color:#89DDFF;">%</span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> totalValue</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">		tempNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Next </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Val</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> currentValue</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">		tempNode </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tempNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Next</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;">// \u4EA7\u751F\u8FDB\u4F4D\u7684\u7279\u6B8A\u60C5\u51B5\u5224\u65AD</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> preValue </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		tempNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Next </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;">Val</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> preValue</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> resultNode</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Next</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,18),e=[o];function t(D,c,r,y,F,A){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{i as __pageData,d as default};

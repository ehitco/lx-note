import{_ as s,o as n,c as a,a as l}from"./app.31720a63.js";const i=JSON.parse('{"title":"\u53CD\u8F6C\u94FE\u8868\u7684\u4E00\u90E8\u5206","description":"","frontmatter":{},"headers":[{"level":3,"title":"\u4EC0\u4E48\u53EB\u53CD\u8F6C\u5355\u94FE\u8868\u7684\u4E00\u90E8\u5206","slug":"\u4EC0\u4E48\u53EB\u53CD\u8F6C\u5355\u94FE\u8868\u7684\u4E00\u90E8\u5206","link":"#\u4EC0\u4E48\u53EB\u53CD\u8F6C\u5355\u94FE\u8868\u7684\u4E00\u90E8\u5206","children":[]},{"level":3,"title":"\u9012\u5F52\u53CD\u8F6C\u6574\u4E2A\u94FE\u8868","slug":"\u9012\u5F52\u53CD\u8F6C\u6574\u4E2A\u94FE\u8868","link":"#\u9012\u5F52\u53CD\u8F6C\u6574\u4E2A\u94FE\u8868","children":[]},{"level":3,"title":"\u53CD\u8F6C\u94FE\u8868\u524D N \u4E2A\u8282\u70B9","slug":"\u53CD\u8F6C\u94FE\u8868\u524D-n-\u4E2A\u8282\u70B9","link":"#\u53CD\u8F6C\u94FE\u8868\u524D-n-\u4E2A\u8282\u70B9","children":[]},{"level":3,"title":"\u53CD\u8F6C\u94FE\u8868\u7684\u4E00\u90E8\u5206","slug":"\u53CD\u8F6C\u94FE\u8868\u7684\u4E00\u90E8\u5206-1","link":"#\u53CD\u8F6C\u94FE\u8868\u7684\u4E00\u90E8\u5206-1","children":[]}],"relativePath":"\u6570\u636E\u4E0E\u7B97\u6CD5/\u5237\u9898\u6280\u5DE7/\u9012\u5F52\u53CD\u8F6C\u94FE\u8868\u7684\u4E00\u90E8\u5206.md","lastUpdated":1670480666000}'),p={name:"\u6570\u636E\u4E0E\u7B97\u6CD5/\u5237\u9898\u6280\u5DE7/\u9012\u5F52\u53CD\u8F6C\u94FE\u8868\u7684\u4E00\u90E8\u5206.md"},o=l(`<h1 id="\u53CD\u8F6C\u94FE\u8868\u7684\u4E00\u90E8\u5206" tabindex="-1">\u53CD\u8F6C\u94FE\u8868\u7684\u4E00\u90E8\u5206 <a class="header-anchor" href="#\u53CD\u8F6C\u94FE\u8868\u7684\u4E00\u90E8\u5206" aria-hidden="true">#</a></h1><h3 id="\u4EC0\u4E48\u53EB\u53CD\u8F6C\u5355\u94FE\u8868\u7684\u4E00\u90E8\u5206" tabindex="-1">\u4EC0\u4E48\u53EB\u53CD\u8F6C\u5355\u94FE\u8868\u7684\u4E00\u90E8\u5206 <a class="header-anchor" href="#\u4EC0\u4E48\u53EB\u53CD\u8F6C\u5355\u94FE\u8868\u7684\u4E00\u90E8\u5206" aria-hidden="true">#</a></h3><p>\u5C31\u662F\u7ED9\u4F60\u4E00\u4E2A\u7D22\u5F15\u533A\u95F4\uFF0C\u8BA9\u4F60\u628A\u5355\u94FE\u8868\u4E2D\u8FD9\u90E8\u5206\u5143\u7D20\u53CD\u8F6C\uFF0C\u5176\u4ED6\u90E8\u5206\u4E0D\u53D8\uFF1A</p><h3 id="\u9012\u5F52\u53CD\u8F6C\u6574\u4E2A\u94FE\u8868" tabindex="-1">\u9012\u5F52\u53CD\u8F6C\u6574\u4E2A\u94FE\u8868 <a class="header-anchor" href="#\u9012\u5F52\u53CD\u8F6C\u6574\u4E2A\u94FE\u8868" aria-hidden="true">#</a></h3><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">/*</span></span>
<span class="line"><span style="color:#676E95;"> * @lc app=leetcode.cn id=206 lang=java</span></span>
<span class="line"><span style="color:#676E95;"> *</span></span>
<span class="line"><span style="color:#676E95;"> * [206] \u53CD\u8F6C\u94FE\u8868</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// @lc code=start</span></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Definition for singly-linked list.</span></span>
<span class="line"><span style="color:#676E95;"> * public class ListNode {</span></span>
<span class="line"><span style="color:#676E95;"> * int val;</span></span>
<span class="line"><span style="color:#676E95;"> * ListNode next;</span></span>
<span class="line"><span style="color:#676E95;"> * ListNode() {}</span></span>
<span class="line"><span style="color:#676E95;"> * ListNode(int val) { this.val = val; }</span></span>
<span class="line"><span style="color:#676E95;"> * ListNode(int val, ListNode next) { this.val = val; this.next = next; }</span></span>
<span class="line"><span style="color:#676E95;"> * }</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">reverseList</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">head </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> head</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> last </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">reverseList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> head</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> last</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;">// @lc code=end</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>\u53EA\u80FD\u8BF4\u975E\u5E38\u5999\uFF01 <img src="https://raw.githubusercontent.com/Merlin218/image-storage/master/picGo/202201111713529.png" alt=""></p><p><img src="https://raw.githubusercontent.com/Merlin218/image-storage/master/picGo/202201111714076.png" alt=""></p><h3 id="\u53CD\u8F6C\u94FE\u8868\u524D-n-\u4E2A\u8282\u70B9" tabindex="-1">\u53CD\u8F6C\u94FE\u8868\u524D N \u4E2A\u8282\u70B9 <a class="header-anchor" href="#\u53CD\u8F6C\u94FE\u8868\u524D-n-\u4E2A\u8282\u70B9" aria-hidden="true">#</a></h3><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">reserveN</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> head</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> n</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      successor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> head</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> last </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">reserveN</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> n </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> head</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> successor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> last</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>\u5177\u4F53\u7684\u533A\u522B\uFF1A</p><ol><li>base case \u53D8\u4E3A <code>n == 1</code>\uFF0C\u53CD\u8F6C\u4E00\u4E2A\u5143\u7D20\uFF0C\u5C31\u662F\u5B83\u672C\u8EAB\uFF0C\u540C\u65F6<strong>\u8981\u8BB0\u5F55\u540E\u9A71\u8282\u70B9</strong>\u3002</li><li>\u521A\u624D\u6211\u4EEC\u76F4\u63A5\u628A <code>head.next</code> \u8BBE\u7F6E\u4E3A null\uFF0C\u56E0\u4E3A\u6574\u4E2A\u94FE\u8868\u53CD\u8F6C\u540E\u539F\u6765\u7684 <code>head</code> \u53D8\u6210\u4E86\u6574\u4E2A\u94FE\u8868\u7684\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u3002\u4F46\u73B0\u5728 <code>head</code> \u8282\u70B9\u5728\u9012\u5F52\u53CD\u8F6C\u4E4B\u540E\u4E0D\u4E00\u5B9A\u662F\u6700\u540E\u4E00\u4E2A\u8282\u70B9\u4E86\uFF0C\u6240\u4EE5\u8981\u8BB0\u5F55\u540E\u9A71 <code>successor</code>\uFF08\u7B2C n + 1 \u4E2A\u8282\u70B9\uFF09\uFF0C\u53CD\u8F6C\u4E4B\u540E\u5C06 <code>head</code> \u8FDE\u63A5\u4E0A\u3002</li></ol><h3 id="\u53CD\u8F6C\u94FE\u8868\u7684\u4E00\u90E8\u5206-1" tabindex="-1">\u53CD\u8F6C\u94FE\u8868\u7684\u4E00\u90E8\u5206 <a class="header-anchor" href="#\u53CD\u8F6C\u94FE\u8868\u7684\u4E00\u90E8\u5206-1" aria-hidden="true">#</a></h3><p><img src="https://cdn.jsdelivr.net/gh/Merlin218/image-storage/picGo/202203241554337.png" alt=""></p><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki"><code><span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">java</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">util</span><span style="color:#89DDFF;">.</span><span style="color:#C792EA;">List</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">/*</span></span>
<span class="line"><span style="color:#676E95;"> * @lc app=leetcode.cn id=92 lang=java</span></span>
<span class="line"><span style="color:#676E95;"> *</span></span>
<span class="line"><span style="color:#676E95;"> * [92] \u53CD\u8F6C\u94FE\u8868 II</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// @lc code=start</span></span>
<span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Definition for singly-linked list.</span></span>
<span class="line"><span style="color:#676E95;"> * public class ListNode {</span></span>
<span class="line"><span style="color:#676E95;"> * int val;</span></span>
<span class="line"><span style="color:#676E95;"> * ListNode next;</span></span>
<span class="line"><span style="color:#676E95;"> * ListNode() {}</span></span>
<span class="line"><span style="color:#676E95;"> * ListNode(int val) { this.val = val; }</span></span>
<span class="line"><span style="color:#676E95;"> * ListNode(int val, ListNode next) { this.val = val; this.next = next; }</span></span>
<span class="line"><span style="color:#676E95;"> * }</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> successor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// \u8BB0\u5F55</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// \u53CD\u8F6C\u524Dn\u4E2A\u7ED3\u70B9\uFF0C\u8FD4\u56DE\u7684\u662F\u65B0\u7684\u5934\u7ED3\u70B9</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">reserveN</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">n</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">n </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      successor </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> head</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;">// last \u8868\u793A\u53CD\u8F6C\u90E8\u5206\u7684\u6700\u540E\u4E00\u4E2A\u7ED3\u70B9\uFF0C\u4E5F\u662F\u65B0\u7684\u5934\u7ED3\u70B9</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> last </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">reserveN</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> n </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> head</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> successor</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> last</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">reverseBetween</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">left</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">right</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">left </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">reserveN</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> right</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">reverseBetween</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> left </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> right </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> head</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;">// @lc code=end</span></span>
<span class="line"></span>
<span class="line"></span></code></pre></div><p>\u9012\u5F52\u7684\u601D\u60F3\u76F8\u5BF9\u8FED\u4EE3\u601D\u60F3\uFF0C\u7A0D\u5FAE\u6709\u70B9\u96BE\u4EE5\u7406\u89E3\uFF0C\u5904\u7406\u7684\u6280\u5DE7\u662F\uFF1A\u4E0D\u8981\u8DF3\u8FDB\u9012\u5F52\uFF0C\u800C\u662F\u5229\u7528\u660E\u786E\u7684\u5B9A\u4E49\u6765\u5B9E\u73B0\u7B97\u6CD5\u903B\u8F91\u3002</p><p>\u5904\u7406\u770B\u8D77\u6765\u6BD4\u8F83\u56F0\u96BE\u7684\u95EE\u9898\uFF0C\u53EF\u4EE5\u5C1D\u8BD5\u5316\u6574\u4E3A\u96F6\uFF0C\u628A\u4E00\u4E9B\u7B80\u5355\u7684\u89E3\u6CD5\u8FDB\u884C\u4FEE\u6539\uFF0C\u89E3\u51B3\u56F0\u96BE\u7684\u95EE\u9898\u3002</p><p>\u503C\u5F97\u4E00\u63D0\u7684\u662F\uFF0C\u9012\u5F52\u64CD\u4F5C\u94FE\u8868\u5E76\u4E0D\u9AD8\u6548\u3002\u548C\u8FED\u4EE3\u89E3\u6CD5\u76F8\u6BD4\uFF0C\u867D\u7136\u65F6\u95F4\u590D\u6742\u5EA6\u90FD\u662F O(N)\uFF0C\u4F46\u662F\u8FED\u4EE3\u89E3\u6CD5\u7684\u7A7A\u95F4\u590D\u6742\u5EA6\u662F O(1)\uFF0C\u800C\u9012\u5F52\u89E3\u6CD5\u9700\u8981\u5806\u6808\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u662F O(N)\u3002\u6240\u4EE5\u9012\u5F52\u64CD\u4F5C\u94FE\u8868\u53EF\u4EE5\u4F5C\u4E3A\u5BF9\u9012\u5F52\u7B97\u6CD5\u7684\u7EC3\u4E60\u6216\u8005\u62FF\u53BB\u548C\u5C0F\u4F19\u4F34\u88C5\u903C\uFF0C\u4F46\u662F\u8003\u8651\u6548\u7387\u7684\u8BDD\u8FD8\u662F\u4F7F\u7528\u8FED\u4EE3\u7B97\u6CD5\u66F4\u597D\u3002</p>`,17),e=[o];function c(t,r,D,y,C,A){return n(),a("div",null,e)}const d=s(p,[["render",c]]);export{i as __pageData,d as default};
